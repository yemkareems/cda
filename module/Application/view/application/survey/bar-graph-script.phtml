<script src="/js/d3.js"></script>
<br><br>
<div id="results" style="float: left;">

</div>

<style>

    .axis {
        font: 10px sans-serif;
    }

    .axis path,
    .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }

</style>



<script>
    var cYear = $('#selectYear').val();
    var cQuarter = $('#selectQuarter').val();

    var cDate = new Date();
    if (typeof cYear == 'undefined') {
        cYear = cDate.getFullYear();
    }
    if (typeof cQuarter == 'undefined') {
        cQuarter = Math.ceil(cDate.getMonth() / 3);
    }

    var margin = {top: 120, right: 120, bottom: 190, left: 270},
        width = 800 - margin.left - margin.right,
        height = 800 - margin.top - margin.bottom;

    // Parse the date / time
    //var	parseDate = d3.time.format("%Y-%m").parse;

    var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);

    var y = d3.scale.linear().range([height, 0]);

    var xAxis = d3.svg.axis()
        .scale(x)
        .orient("bottom")
        .ticks(20);

    var yAxis = d3.svg.axis()
        .scale(y)
        .orient("left")
        .ticks(10);

    var svg = d3.select("#results").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform",
        "translate(" + margin.left + "," + margin.top + ")");

    d3.csv('<?php echo $this->url('survey-bar-csv'); ?>/<?php echo $this->team->getId(); ?>/'+ cYear +'/'+ cQuarter, function(error, data) {

        data.forEach(function(d) {
            d.date = d.date;
            d.value = +d.value;
            d.fillcolor = d.fillcolor;
        });

        x.domain(data.map(function(d) { return d.date; }));
        y.domain([0, 100]);

        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis)
            .selectAll("text")
            .style("text-anchor", "end")
            .attr("dx", "-.8em")
            .attr("dy", "-.55em")
            .attr("transform", "rotate(-90)" );

        svg.append("g")
            .attr("class", "y axis")
            .call(yAxis)
            .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", -45)
            .attr("dy", ".71em")
            .style("text-anchor", "end")
            .text("Total Score %");

        svg.selectAll("bar")
            .data(data)
            .enter().append("rect")
            .style("fill", function(d) { return d.fillcolor; })
            .attr("x", function(d) { return x(d.date); })
            .attr("width", x.rangeBand())
            .attr("y", function(d) { return y(d.value); })
            .attr("height", function(d) { return height - y(d.value); });

    });

    /*var LegendOptions = [['Low','#ea4335'],
                         ['Medium','#fbbc05'],
                         ['Good','#f09535'],
                         ['Excellent','#34a853']];


    var legend = svg.append("g")
        .attr("class", "legend")
        //.attr("x", 1065)
       // .attr("y", 1150)
        .attr("height", 100)
        .attr("width", 100)
        .attr('transform', 'translate(-20,50)');

    var legendRect = legend.selectAll('rect').data(LegendOptions);

    legendRect.enter()
        .append("rect")
        .attr("x",  435)
        .attr("width", 15)
        .attr("height", 15);

    legendRect
        .attr("y", function(d, i) {
            return i * 20;
        })
        .style("fill", function(d) {
            return d[1];
        });

    var legendText = legend.selectAll('text').data(LegendOptions);

    legendText.enter()
        .append("text")
        .attr("x",  452);

    legendText
        .attr("y", function(d, i) {
            return i * 20 + 11;
        })
        .text(function(d) {
            return d[0];
        });*/



</script>